(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{605:function(s,t,a){"use strict";a.r(t);var e=a(12),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h3",{attrs:{id:"定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[s._v("#")]),s._v(" 定义")]),s._v(" "),a("blockquote",[a("p",[s._v('Flex 是 Flexible Box 的缩写，意为"弹性布局"，用来为盒状模型提供最大的灵活性。')])]),s._v(" "),a("h3",{attrs:{id:"属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[s._v("#")]),s._v(" 属性")]),s._v(" "),a("ul",[a("li",[s._v("父组件\n"),a("ul",[a("li",[s._v("flex-direction")]),s._v(" "),a("li",[s._v("flex-wrap")]),s._v(" "),a("li",[s._v("flex-flow")]),s._v(" "),a("li",[s._v("justify-content")]),s._v(" "),a("li",[s._v("align-items")]),s._v(" "),a("li",[s._v("align-content")])])]),s._v(" "),a("li",[s._v("子组件\n"),a("ul",[a("li",[s._v("order")]),s._v(" "),a("li",[s._v("flex-grow")]),s._v(" "),a("li",[s._v("flex-shrink")]),s._v(" "),a("li",[s._v("flex-basis")]),s._v(" "),a("li",[s._v("flex")]),s._v(" "),a("li",[s._v("align-self")])])])]),s._v(" "),a("h3",{attrs:{id:"父组件属性分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#父组件属性分析"}},[s._v("#")]),s._v(" 父组件属性分析")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("flex-direction")]),s._v(": 决定主轴的方向（即项目的排列方向）"),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[s._v("flex-direction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" row | row-reverse | column | column-reverse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("ul",[a("li",[s._v("row(默认值) ：主轴为水平方向，起点在左端。")]),s._v(" "),a("li",[s._v("row-reverse ： 主轴为水平方向，起点在右端。")]),s._v(" "),a("li",[s._v("column：主轴为纯直方向，起点在上端。")]),s._v(" "),a("li",[s._v("column-reverse：主轴为纯直方向，起点在下端。")])])]),s._v(" "),a("li",[a("strong",[s._v("flex-wrap")]),s._v(": 如果一条轴线排不下，如何换行。"),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[s._v("flex-wrap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nowrap | wrap | wrap-reverse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("ul",[a("li",[s._v("nowrap(默认值)：不换行。")]),s._v(" "),a("li",[s._v("wrap：换行，第一行在上方。")]),s._v(" "),a("li",[s._v("wrap-reverse：换行，第一行在下方。")])])]),s._v(" "),a("li",[a("strong",[s._v("flex-flow")]),s._v(":flex-direction 属性和 flex-wrap 属性的简写形式，默认值为 row nowrap。"),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[s._v("flex-flow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" row<flex-direction> | nowrap。<flex-wrap>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])]),s._v(" "),a("li",[a("strong",[s._v("justify-content")]),s._v(": 项目在主轴上的对齐方式。"),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[s._v("justify-content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" flex-start | flex-end | center | space-between | space-around"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("ul",[a("li",[s._v("flex-start（默认值）：左对齐。")]),s._v(" "),a("li",[s._v("flex-end：右对齐。")]),s._v(" "),a("li",[s._v("center： 居中。")]),s._v(" "),a("li",[s._v("space-between：两端对齐，项目之间的间隔都相等。")]),s._v(" "),a("li",[s._v("space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。")])])]),s._v(" "),a("li",[a("strong",[s._v("align-items")]),s._v(":项目在交叉轴上如何对齐。"),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[s._v("align-items")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" flex-start | flex-end | center | baseline | stretch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("ul",[a("li",[s._v("flex-start：交叉轴的起点对齐。")]),s._v(" "),a("li",[s._v("flex-end：交叉轴的终点对齐。")]),s._v(" "),a("li",[s._v("center：交叉轴的中点对齐。")]),s._v(" "),a("li",[s._v("baseline: 项目的第一行文字的基线对齐。")]),s._v(" "),a("li",[s._v("stretch（默认值）：如果项目未设置高度或设为 auto，将占满整个容器的高度。")])])]),s._v(" "),a("li",[a("strong",[s._v("align-content")]),s._v(":多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。"),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[s._v("align-content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" flex-start | flex-end | center | space-between | space-around |\n  stretch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("ul",[a("li",[s._v("flex-start：与交叉轴的起点对齐。")]),s._v(" "),a("li",[s._v("flex-end：与交叉轴的终点对齐。")]),s._v(" "),a("li",[s._v("center：与交叉轴的中点对齐。")]),s._v(" "),a("li",[s._v("space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。")]),s._v(" "),a("li",[s._v("space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。")]),s._v(" "),a("li",[s._v("stretch（默认值）：轴线占满整个交叉轴。")])])])]),s._v(" "),a("h3",{attrs:{id:"子组件属性分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#子组件属性分析"}},[s._v("#")]),s._v(" 子组件属性分析")]),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[s._v("order")]),s._v(":项目的排列顺序。数值越小，排列越靠前，默认为 0。")]),s._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[s._v("order")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 0 <integer>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* default 0 */")]),s._v("\n")])])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("flex-grow")]),s._v(":项目的放大比例，默认为 0，即如果存在剩余空间，也不放大。")]),s._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[s._v("flex-grow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 0 <number>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* default 0 */")]),s._v("\n")])])]),a("p",[s._v("如果所有项目的 flex-grow 属性都为 1，则它们将等分剩余空间（如果有的话）。如果一个项目的 flex-grow 属性为 2，其他项目都为 1，则前者占据的剩余空间将比其他项多一倍。")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("flex-shrink")]),s._v(":项目的缩小比例，默认为 1，即如果空间不足，该项目将缩小。")]),s._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[s._v("flex-shrink")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 1 <number>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* default 1 */")]),s._v("\n")])])]),a("p",[s._v("如果所有项目的 flex-shrink 属性都为 1，当空间不足时，都将等比例缩小。如果一个项目的 flex-shrink 属性为 0，其他项目都为 1，则空间不足时，前者不缩小。")]),s._v(" "),a("p",[s._v("负值对该属性无效。")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("flex-basis")]),s._v(":定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为 auto，即项目的本来大小。")]),s._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[s._v("flex-basis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" <length> | auto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* default auto */")]),s._v("\n")])])]),a("p",[s._v("它可以设为跟 width 或 height 属性一样的值（比如 350px），则项目将占据固定空间。")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("flex")]),s._v(":是 flex-grow, flex-shrink 和 flex-basis 的简写，默认值为 0 1 auto。后两个属性可选。")]),s._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[s._v("flex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" none | [ < "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"flex-grow"')]),s._v(" > < "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"flex-shrink"')]),s._v(" >? || < "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"flex-basis"')]),s._v(" > ]"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)。")]),s._v(" "),a("p",[s._v("建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("align-self")]),s._v(":允许单个项目有与其他项目不一样的对齐方式，可覆盖 align-items 属性。默认值为 auto，表示继承父元素的 align-items 属性，如果没有父元素，则等同于 stretch。")]),s._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[s._v("align-self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" auto | flex-start | flex-end | center | baseline | stretch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("该属性可能取 6 个值，除了 auto，其他都与 align-items 属性完全一致。")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);