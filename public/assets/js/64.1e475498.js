(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{626:function(t,n,s){"use strict";s.r(n);var a=s(12),e=Object(a.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{align:"center"}},[t._v("Taro 请求模板")]),t._v(" "),s("h3",{attrs:{id:"目录结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#目录结构"}},[t._v("#")]),t._v(" 目录结构")]),t._v(" "),s("p",[s("strong",[t._v("src")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("├── components         // 组件\n├── http               // 请求\n│   ├── api.js         // 接口列表\n│   ├── config.js      // 请求配置\n│   ├── index.js       // 导出\n│   └── request.js     // 请求方法封装\n├── images             // 图片资源\n├── pages              // 页面\n├── models             \n├── styles             \n├── utils              // 工具\n")])])]),s("h3",{attrs:{id:"代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码"}},[t._v("#")]),t._v(" 代码")]),t._v(" "),s("ul",[s("li",[t._v("request.js")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("import Taro from '@tarojs/taro';\nimport { baseUrl, noConsole } from './config';\n\nexport default (options = { method: 'GET', data: {} }) => {\n  return Taro.request({\n    url: baseUrl + options.url,\n    data: {\n      ...options.data\n    },\n    header: {\n      'Content-Type': options.contentType || 'application/json',\n    },\n    method: options.method.toUpperCase(),\n  }).then((res) => {\n    const { statusCode, data } = res;\n    if (statusCode >= 200 && statusCode < 300) {\n      if (!noConsole) {\n        console.log(`${new Date().toLocaleString()}【 M=${options.url} 】【接口响应：】`, res.data);\n      }\n      if (data.code || data.statusCode) {\n        if (data.code) {\n          data.statusCode = String(data.code);\n        }\n        if (data.statusCode !== '200') {\n          Taro.showToast({\n            title: `网络错误！`,\n            icon: 'none',\n            mask: true,\n          });\n        }\n      }\n      return data;\n    } else {\n      throw new Error(`网络请求错误，状态码${statusCode}`);\n    }\n  })\n}\n\n")])])]),s("ul",[s("li",[t._v("config.js")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// 配置请求相关信息  域名\nconst noConsole = true;\nconst baseUrl = 'https://your-host-port/';\n\nexport {\n  baseUrl,\n  noConsole\n}\n")])])]),s("ul",[s("li",[t._v("api.js")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const APIV = '/proxy';  // 代理\n\nconst api = {\n  user: {\n    login: `${APIV}/api/login`\n  }\n}\n\nmodule.exports = api;\n")])])]),s("ul",[s("li",[t._v("index.js")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("import Request from './request';\nimport api from './api';\n\nexport {\n  Request,\n  api\n}\n")])])])])}),[],!1,null,null,null);n.default=e.exports}}]);